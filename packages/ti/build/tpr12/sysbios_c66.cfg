/* =============================================================================
 *   Copyright (c) Texas Instruments Incorporated 2020
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
environment['xdc.cfg.check.fatal'] = 'false';

/********************************************************************
 ************************** BIOS Modules ****************************
 ********************************************************************/
var Memory    = xdc.useModule('xdc.runtime.Memory');
var BIOS      = xdc.useModule('ti.sysbios.BIOS');
var HeapMem   = xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf   = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Task      = xdc.useModule('ti.sysbios.knl.Task');
var Idle      = xdc.useModule('ti.sysbios.knl.Idle');
var SEM       = xdc.useModule('ti.sysbios.knl.Semaphore');
var Event     = xdc.useModule('ti.sysbios.knl.Event');
var System    = xdc.useModule('xdc.runtime.System');
var SysStd    = xdc.useModule('xdc.runtime.SysStd');
var Hwi       = xdc.useModule('ti.sysbios.family.c64p.Hwi');
var EventCombiner = xdc.useModule('ti.sysbios.family.c64p.EventCombiner');

/* Enable Timer */
var Timer = xdc.useModule('ti.sysbios.hal.Timer');

System.SupportProxy = SysStd;

/* Default Heap Creation: Local L2 memory */
var heapMemParams           = new HeapMem.Params();
heapMemParams.size          = 32*1024;
Program.global.heap0        = HeapMem.create(heapMemParams);
Memory.defaultHeapInstance  = Program.global.heap0;

/* Remove clock while we are profiling for cycles and don't want BIOS
   periodic interruption */
BIOS.clockEnabled = true;

/* Enable BIOS Task Scheduler */
BIOS.taskEnabled			= true;



