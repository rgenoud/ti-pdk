/*
 * SDR ECC
 *
 * Software Diagnostics Reference module for ECC
 *
 *  Copyright (c) Texas Instruments Incorporated 2020
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef INCLUDE_SDR_ECC_SOC_H_
#define INCLUDE_SDR_ECC_SOC_H_

#include <stdint.h>
#include <sdr_ecc.h>
#include <ti/csl/csl_ecc_aggr.h>

#include "sdr_ecc_priv.h"

#define NOT_USE_CSLR

// TODO - Macros defined within NOT_USE_CSLR to be used until CSLR values for J721E defined
#if defined(NOT_USE_CSLR)

#define CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_SRAM_RAMECC_SIZE                         (40U) //TBD


/* ECC Row Widths for MCU Pulsar RAM ID's with Wrapper type
 * metadata width = (ecc_row_width) + 2 + log2(ecc_row_width) */
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM0_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM1_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM2_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM3_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK0_ROW_SIZE                           (64U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK1_ROW_SIZE                           (64U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK2_ROW_SIZE                           (64U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK3_ROW_SIZE                           (64U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM0_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM1_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM2_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM3_ROW_SIZE                             (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDIRTY_RAM_ROW_SIZE                            (22U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM0_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM1_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM2_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM3_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM4_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM5_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM6_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM7_ROW_SIZE                            (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK0_ROW_SIZE                      (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK1_ROW_SIZE                      (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK0_ROW_SIZE                     (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK1_ROW_SIZE                     (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK0_ROW_SIZE                     (32U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK1_ROW_SIZE                     (32U)
//#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_ROW_SIZE                         (30U)
#define CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_ROW_SIZE                         (32U)

// MCU_CBASS_
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_ID                 (0U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_ECC_TYPE           (1U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_INJECT_TYPE        (0U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_RAM_SIZE           (0U) // TBD

#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_ID                 (1U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_ECC_TYPE           (1U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_INJECT_TYPE        (0U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_RAM_SIZE           (0U) // TBD

#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ID                  (2U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ECC_TYPE            (1U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_INJECT_TYPE         (0U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_RAM_SIZE            (0U)
#define CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ACCESSIBLE          (0U)
#endif /* #if defined(NOT_USE_CSLR) */

/* define MAX entry based on list of Subtypes */
#define SDR_PULSAR_CPU_RAM_ID_TABLE_MAX_ENTRIES (CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ECC_AGGR_EDC_CTRL_ID+1u)
#define SDR_MSMC_AGGR0_RAM_ID_TABLE_MAX_ENTRIES (CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_J7ES_CLEC_EDC_CTRL_BUSECC_ID+1u)
#define SDR_MCU_CBASS_RAM_ID_TABLE_MAX_ENTRIES (CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ID+1u)

/* define Max memEntries for each aggregator (i.e. the number of RAM ID's with
 * Wrapper type) */
#define SDR_PULSAR_CPU_WRAPPER_RAM_IDS_TOTAL_ENTRIES                                      (28U)
#define SDR_MSMC_AGGR0_WRAPPER_RAM_IDS_TOTAL_ENTRIES                                      (1U)
#define SDR_MCU_CBASS_WRAPPER_RAM_IDS_TOTAL_ENTRIES                                       (2U)

#define SDR_PULSAR_CPU_RAM_ID_VBUSM2_AXI_EDC_VECTOR_GRP_MAX_ENTRIES                       (49U)

/** ------------------------------------------------------------------------------------
 * @brief This structure holds the list of Ram Ids for each memory subtype in MCU domain
 * -------------------------------------------------------------------------------------
 */
const SDR_RAMIdEntry_t SDR_ECC_mcuArmssRamIdTable[SDR_PULSAR_CPU_RAM_ID_TABLE_MAX_ENTRIES] =
{
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM2_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM2_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM2_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM3_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM3_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM3_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK2_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK2_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK2_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK3_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK3_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK3_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM2_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM2_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM2_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM3_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM3_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM3_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDIRTY_RAM_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDIRTY_RAM_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDIRTY_RAM_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM2_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM2_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM2_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM3_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM3_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM3_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM4_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM4_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM4_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM5_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM5_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM5_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM6_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM6_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM6_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM7_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM7_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM7_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK0_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK0_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK0_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK1_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK1_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK1_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_ID,
       0U,  // TODO - Update this value to CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_INJECT_TYPE when it is properly set to 0U in CSLR
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_ECC_TYPE },
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_KSBUS_VBUSM2AXI0_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_KSBUS_VBUSM2AXI0_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_KSBUS_VBUSM2AXI0_EDC_CTRL_ECC_TYPE }, // 28 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_ECC_TYPE }, // 29 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_MEM_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_ECC_TYPE }, // 30 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_W_EDC_CTRL_ECC_TYPE }, // 31 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PERIPH_M_MST0_KSBUS_AXI2VBUSM_R_EDC_CTRL_ECC_TYPE }, // 32 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_AHB2VBUSP_CPU0_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_AHB2VBUSP_CPU0_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_AHB2VBUSP_CPU0_EDC_CTRL_ECC_TYPE }, // 33 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_CFG_SCRP_INTERFACE0_GCLK_CLK_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_CFG_SCRP_INTERFACE0_GCLK_CLK_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_CFG_SCRP_INTERFACE0_GCLK_CLK_EDC_CTRL_ECC_TYPE }, // 34 - Interconnect Type
 { CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ECC_AGGR_EDC_CTRL_ID,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ECC_AGGR_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ECC_AGGR_EDC_CTRL_ECC_TYPE }, // 35 - Interconnect Type
};

/** ----------------------------------------------------------------------------------
 * @brief This structure holds the memory config for each memory subtype in MCU domain
 * -----------------------------------------------------------------------------------
 */
// TODO - Utilize CSLR sizes when confirmed accurate
const SDR_MemConfig_t SDR_ECC_mcuArmssMemEntries[SDR_PULSAR_CPU_WRAPPER_RAM_IDS_TOTAL_ENTRIES] =
{
    {SDR_ECC_R5F_MEM_SUBTYPE_ITAG_RAM0_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ITAG_RAM0_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM0_ROW_SIZE,  ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_ITAG_RAM1_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ITAG_RAM1_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM1_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_ITAG_RAM2_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ITAG_RAM2_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM2_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_ITAG_RAM3_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ITAG_RAM3_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_ITAG_RAM3_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_IDATA_BANK0_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_IDATA_BANK0_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK0_ROW_SIZE, ((bool)false)       },
    {SDR_ECC_R5F_MEM_SUBTYPE_IDATA_BANK1_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_IDATA_BANK1_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK1_ROW_SIZE, ((bool)false)       },
    {SDR_ECC_R5F_MEM_SUBTYPE_IDATA_BANK2_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_IDATA_BANK2_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK2_ROW_SIZE, ((bool)false)       },
    {SDR_ECC_R5F_MEM_SUBTYPE_IDATA_BANK3_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_IDATA_BANK3_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_IDATA_BANK3_ROW_SIZE, ((bool)false)       },
    {SDR_ECC_R5F_MEM_SUBTYPE_DTAG_RAM0_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DTAG_RAM0_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM0_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_DTAG_RAM1_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DTAG_RAM1_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM1_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_DTAG_RAM2_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DTAG_RAM2_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM2_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_DTAG_RAM3_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DTAG_RAM3_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DTAG_RAM3_ROW_SIZE, ((bool)false)         },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDIRTY_RAM_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDIRTY_RAM_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDIRTY_RAM_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM0_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM0_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM0_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM1_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM1_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM1_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM2_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM2_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM2_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM3_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM3_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM3_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM4_VECTOR_ID ,0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM4_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM4_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM5_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM5_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM5_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM6_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM6_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM6_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_DDATA_RAM7_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_DDATA_RAM7_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_DDATA_RAM7_ROW_SIZE, ((bool)false)        },
    {SDR_ECC_R5F_MEM_SUBTYPE_ATCM0_BANK0_VECTOR_ID, 0u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ATCM0_BANK0_SIZE, 8u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK0_ROW_SIZE, ((bool)true)   },
    {SDR_ECC_R5F_MEM_SUBTYPE_ATCM0_BANK1_VECTOR_ID, 0x4u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_ATCM0_BANK1_SIZE, 8u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_ATCM0_BANK1_ROW_SIZE, ((bool)true)   },
    {SDR_ECC_R5F_MEM_SUBTYPE_B0TCM0_BANK0_VECTOR_ID, 0x41010000u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_B0TCM0_BANK0_SIZE, 16u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK0_ROW_SIZE, ((bool)true)  },
    {SDR_ECC_R5F_MEM_SUBTYPE_B0TCM0_BANK1_VECTOR_ID, 0x41010004u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_B0TCM0_BANK1_SIZE, 16u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B0TCM0_BANK1_ROW_SIZE, ((bool)true)  },
    {SDR_ECC_R5F_MEM_SUBTYPE_B1TCM0_BANK0_VECTOR_ID, 0x41010008u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_B1TCM0_BANK0_SIZE, 16u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK0_ROW_SIZE, ((bool)true)  },
    {SDR_ECC_R5F_MEM_SUBTYPE_B1TCM0_BANK1_VECTOR_ID, 0x4101000cu,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_B1TCM0_BANK1_SIZE, 16u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_PULSAR_SL_B1TCM0_BANK1_ROW_SIZE, ((bool)true)  },
    {SDR_ECC_R5F_MEM_SUBTYPE_KS_VIM_RAM_VECTOR_ID, 0x40f82000u,
                  CSL_ECCAGGR_PULSAR_SL_CPU0_KS_VIM_RAMECC_SIZE, 4u,
                  CSL_MCU_R5FSS0_CORE0_ECC_AGGR_CPU0_KS_VIM_RAMECC_ROW_SIZE, ((bool)true) },
};

/* Max entries based on max mem type */
#define SDR_ECC_AGGREGATOR_MAX_LOW_ENTRIES (SDR_ECC_MEMTYPE_MCU_CBASS_ECC_AGGR0+1u)

#define SDR_ECC_AGGREGATOR_MAX_HIGH_ENTRIES (SDR_ECC_MEMTYPE_MAIN_MSMC_AGGR2 - \
                                           SDR_ECC_MEMTYPE_MAIN_MSMC_AGGR0 + 1u) 

/* Max entries based on max mem type */
#define SDR_ECC_AGGREGATOR_MAX_ENTRIES (SDR_ECC_AGGREGATOR_MAX_LOW_ENTRIES + \
                                        SDR_ECC_AGGREGATOR_MAX_HIGH_ENTRIES)

/** -----------------------------------------------------------------------------------
 * @brief This structure holds the base addresses for each memory subtype in MCU domain
 * ------------------------------------------------------------------------------------
 */
CSL_ecc_aggrRegs * const SDR_ECC_aggrBaseAddressTable[SDR_ECC_AGGREGATOR_MAX_LOW_ENTRIES] =
{
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_R5FSS0_CORE0_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)0U)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_ADC0_ECC_REGS_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_ADC1_ECC_REGS_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_CPSW0_ECC_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_FSS0_HPB_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_FSS0_OSPI0_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_FSS0_OSPI1_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_MCAN0_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_MCAN1_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_MSRAM_1MB0_ECC_AGGR_REGS_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_NAVSS0_ECCAGGR0_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)0U)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)0U)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_PSRAMECC0_ECC_AGGR_BASE)),
    ((CSL_ecc_aggrRegs *)((uintptr_t)CSL_MCU_ECC_AGGR0_ECC_AGGR_BASE)),
};

/* Addresses will be cast to CSL_ecc_aggrRegs after RAT translation */
uint64_t const SDR_ECC_aggrHighBaseAddressTable[SDR_ECC_AGGREGATOR_MAX_HIGH_ENTRIES] =
{
    (uint64_t)CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_BASE,
    (uint64_t)CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR1_BASE,
    (uint64_t)CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR2_BASE,
};

CSL_ecc_aggrRegs * SDR_ECC_aggrHighBaseAddressTableTrans[SDR_ECC_AGGREGATOR_MAX_HIGH_ENTRIES];

/** -------------------------------------------------------------------------------------
 * @brief This structure holds the list of Ram Ids for each memory subtype in MSMC AGGR0
 * --------------------------------------------------------------------------------------
 */
/* Note: While this table lists all the possible RAM ID's for the MSMC AGGR0, only the following
 * 2 RAM ID's have been tested:
 * CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_MMR_BUSECC_ID = 20 (Interconnect type)
 * CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_CLEC_SRAM_ID = 100 (Wrapper type) */
const SDR_RAMIdEntry_t SDR_ECC_mainMsmcAggr0RamIdTable[SDR_MSMC_AGGR0_RAM_ID_TABLE_MAX_ENTRIES] =
{
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_EDC_CTRL_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_EDC_CTRL_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_EDC_CTRL_ECC_TYPE }, // 0
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CC_MSMC_EN_MSMC_8MB_MSMC_DATA_RAM0_MSMC_MSMC_CORE_CORE_MSMC_QOR_MSMC_CORE_DRU_DRU_CBASS_CBASS_INT_DMSC_SCR_EDC_CTRL_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CC_MSMC_EN_MSMC_8MB_MSMC_DATA_RAM0_MSMC_MSMC_CORE_CORE_MSMC_QOR_MSMC_CORE_DRU_DRU_CBASS_CBASS_INT_DMSC_SCR_EDC_CTRL_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CC_MSMC_EN_MSMC_8MB_MSMC_DATA_RAM0_MSMC_MSMC_CORE_CORE_MSMC_QOR_MSMC_CORE_DRU_DRU_CBASS_CBASS_INT_DMSC_SCR_EDC_CTRL_ECC_TYPE }, // 1
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_DMSC_SLV_BRDG_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_DMSC_SLV_BRDG_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_DMSC_SLV_BRDG_EDC_ECC_TYPE }, // 2
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_EDC_CTRL_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_EDC_CTRL_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_EDC_CTRL_ECC_TYPE }, // 3
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_CFG_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_CFG_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_CFG_EDC_ECC_TYPE }, // 4
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRDG_EDC_ECC_TYPE }, // 5
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRIDGE_EDC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRIDGE_EDC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_BRIDGE_EDC_DUMMY_ECC_TYPE }, // 6
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_CFG_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_CFG_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_CFG_EDC_ECC_TYPE }, // 7
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_EDC_ECC_TYPE }, // 8
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_BR_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_BR_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_BR_EDC_ECC_TYPE }, // 9
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_MMR_FW_CH_EDC_ECC_TYPE }, // 10
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SCR_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SCR_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SCR_EDC_ECC_TYPE }, // 11
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SLV_BRDG_ECC_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SLV_BRDG_ECC_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CBASS_SLV_BRDG_ECC_EDC_ECC_TYPE }, // 12
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CORE_PSIL_CMD_EDC_CTRL_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CORE_PSIL_CMD_EDC_CTRL_0_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_CORE_PSIL_CMD_EDC_CTRL_0_ECC_TYPE }, // 13
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_0_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_0_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_0_EDC_ECC_TYPE }, // 14
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_1_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_1_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_1_EDC_ECC_TYPE }, // 15
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ATTR_EDC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ATTR_EDC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ATTR_EDC_DUMMY_ECC_TYPE }, // 16
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ENG_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ENG_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_ENG_EDC_ECC_TYPE }, // 17
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_QUEUE_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_QUEUE_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_QUEUE_EDC_ECC_TYPE }, // 18
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_RD_BUF_EDC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_RD_BUF_EDC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU_RD_BUF_EDC_ECC_TYPE }, // 19
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_MMR_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_MMR_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_MMR_BUSECC_ECC_TYPE }, // 20
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_POSTARB_PIPE_CFG_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_POSTARB_PIPE_CFG_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_POSTARB_PIPE_CFG_BUSECC_ECC_TYPE }, // 21
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 22
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 23
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU0_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 24
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DRU1_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 25
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_SLV_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_SLV_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_SLV_PIPE_BUSECC_ECC_TYPE }, // 26
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_MST_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_MST_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF0_MST_PIPE_BUSECC_ECC_TYPE }, // 27
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 28
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU0_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 29
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 30
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU1_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 31
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 32
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU2_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 33
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 34
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU3_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 35
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 36
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU4_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 37
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 38
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU5_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 39
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 40
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU6_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 41
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_SLV_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_SLV_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_SLV_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 42
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_MST_LOCAL_ARB_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_MST_LOCAL_ARB_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU7_MST_LOCAL_ARB_BUSECC_DUMMY_ECC_TYPE }, // 43
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 44
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU8_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 45
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_SLV_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_SLV_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_SLV_LOCAL_ARB_BUSECC_ECC_TYPE }, // 46
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_MST_LOCAL_ARB_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_MST_LOCAL_ARB_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CPU9_MST_LOCAL_ARB_BUSECC_ECC_TYPE }, // 47
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_DATA_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_DATA_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_DATA_ECC_TYPE }, // 48
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_BUSECC_ECC_TYPE }, // 49
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ECC_TYPE }, // 50
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 51
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P0_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 52
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_DATA_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_DATA_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_DATA_ECC_TYPE }, // 53
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_BUSECC_DUMMY_ECC_TYPE }, // 54
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ECC_TYPE }, // 55
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 56
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P1_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 57
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_DATA_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_DATA_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_DATA_ECC_TYPE }, // 58
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_BUSECC_DUMMY_ECC_TYPE }, // 59
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ECC_TYPE }, // 60
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 61
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P2_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 62
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_DATA_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_DATA_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_DATA_ECC_TYPE }, // 63
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_BUSECC_DUMMY_ECC_TYPE }, // 64
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_DST_BUSECC_DUMMY_ECC_TYPE }, // 65
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_P2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 66
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EN_MSMC_P3_VBUSP_CFG_SRC_M2M_SRC_BUSECC_DUMMY_ECC_TYPE }, // 67
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_BUSECC_ECC_TYPE }, // 68
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_CACHE_TAG_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_CACHE_TAG_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_CACHE_TAG_PIPE_BUSECC_ECC_TYPE }, // 69
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_0_INJECT_TYPE, 
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_0_ECC_TYPE }, // 70
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_1_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_1_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_QUEUE_BUSECC_1_ECC_TYPE }, // 71
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_RMW_TAG_UPDATE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_RMW_TAG_UPDATE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_RMW_TAG_UPDATE_BUSECC_ECC_TYPE }, // 72
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_SRAM_SF_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_SRAM_SF_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW0_SRAM_SF_PIPE_BUSECC_ECC_TYPE }, // 73
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM0_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM0_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM0_BUSECC_ECC_TYPE }, // 74
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK0_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK0_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK0_BUSECC_ECC_TYPE }, // 75
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_BUSECC_ECC_TYPE }, // 76
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_CACHE_TAG_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_CACHE_TAG_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_CACHE_TAG_PIPE_BUSECC_ECC_TYPE }, // 77
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_0_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_0_ECC_TYPE }, // 78
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_1_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_1_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_QUEUE_BUSECC_1_ECC_TYPE }, // 79
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_RMW_TAG_UPDATE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_RMW_TAG_UPDATE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_RMW_TAG_UPDATE_BUSECC_ECC_TYPE }, // 80
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_SRAM_SF_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_SRAM_SF_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW1_SRAM_SF_PIPE_BUSECC_ECC_TYPE }, // 81
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM1_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM1_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM1_BUSECC_ECC_TYPE }, // 82
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK1_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK1_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK1_BUSECC_ECC_TYPE }, // 83
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_BUSECC_ECC_TYPE }, // 84
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_CACHE_TAG_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_CACHE_TAG_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_CACHE_TAG_PIPE_BUSECC_ECC_TYPE }, // 85
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_0_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_0_ECC_TYPE }, // 86
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_1_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_1_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_QUEUE_BUSECC_1_ECC_TYPE }, // 87
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_RMW_TAG_UPDATE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_RMW_TAG_UPDATE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_RMW_TAG_UPDATE_BUSECC_ECC_TYPE }, // 88
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_SRAM_SF_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_SRAM_SF_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW2_SRAM_SF_PIPE_BUSECC_ECC_TYPE }, // 89
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM2_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM2_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM2_BUSECC_ECC_TYPE }, // 90
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK2_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK2_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK2_BUSECC_ECC_TYPE }, // 91
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_BUSECC_ECC_TYPE }, // 92
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_CACHE_TAG_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_CACHE_TAG_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_CACHE_TAG_PIPE_BUSECC_ECC_TYPE }, // 93
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_0_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_0_ECC_TYPE }, // 94
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_1_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_1_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_QUEUE_BUSECC_1_ECC_TYPE }, // 95
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_RMW_TAG_UPDATE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_RMW_TAG_UPDATE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_RMW_TAG_UPDATE_BUSECC_ECC_TYPE }, // 96
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_SRAM_SF_PIPE_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_SRAM_SF_PIPE_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_RMW3_SRAM_SF_PIPE_BUSECC_ECC_TYPE }, // 97
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM3_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM3_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_SRAM3_BUSECC_ECC_TYPE }, // 98
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK3_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK3_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_DATARAM_BANK3_BUSECC_ECC_TYPE }, // 99
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_CLEC_SRAM_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_CLEC_SRAM_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_CLEC_SRAM_ECC_TYPE }, // 100
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_ECC_AGGR0_P2P_SRC_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_ECC_AGGR0_P2P_SRC_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_ECC_AGGR0_P2P_SRC_BUSECC_DUMMY_ECC_TYPE }, // 101
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_P2P_BRIDGE_CORE_DST_EDC_CTRL_0_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_P2P_BRIDGE_CORE_DST_EDC_CTRL_0_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_MSMC_J7ES_ECC_AGGR0_P2P_BRIDGE_CORE_DST_EDC_CTRL_0_ECC_TYPE }, // 102
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_SLV_PIPE_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_SLV_PIPE_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_SLV_PIPE_BUSECC_DUMMY_ECC_TYPE }, // 103
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_MST_PIPE_BUSECC_DUMMY_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_MST_PIPE_BUSECC_DUMMY_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF1_MST_PIPE_BUSECC_DUMMY_ECC_TYPE }, // 104
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_DSP4_P2P_DST_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_DSP4_P2P_DST_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_VBUSP_CFG_DSP4_P2P_DST_BUSECC_ECC_TYPE }, // 105
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF_0_VSAFE_SI_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF_0_VSAFE_SI_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_EMIF_0_VSAFE_SI_ECC_TYPE }, // 106
 { CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_J7ES_CLEC_EDC_CTRL_BUSECC_ID,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_J7ES_CLEC_EDC_CTRL_BUSECC_INJECT_TYPE,
       CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_J7ES_CLEC_EDC_CTRL_BUSECC_ECC_TYPE }, // 107
};

const SDR_RAMIdEntry_t SDR_ECC_mcuEccAggr0RamIdTable[SDR_MSMC_AGGR0_RAM_ID_TABLE_MAX_ENTRIES] =
{
 { CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_ID,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_INJECT_TYPE,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_ECC_TYPE }, // 0 - Wrapper Type
 { CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_ID,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_INJECT_TYPE,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_ECC_TYPE }, // 1 - Wrapper Type
 { CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ID,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_INJECT_TYPE,
       CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_EDC_CTRL_ECC_TYPE }, // 2 - Interconnect Type
};

/** ----------------------------------------------------------------------------------
 * @brief This structure holds the memory config for each memory subtype in MCU domain
 * -----------------------------------------------------------------------------------
 */
const SDR_MemConfig_t SDR_ECC_mainMsmcAggr0MemEntries[SDR_MSMC_AGGR0_WRAPPER_RAM_IDS_TOTAL_ENTRIES] =
{
    {SDR_ECC_MAIN_MSMC_MEM_WRAPPER_SUBTYPE, 0u,
         CSL_COMPUTE_CLUSTER0_MSMC_ECC_AGGR0_CLEC_SRAM_RAMECC_SIZE, 4u, ((bool)false) },
};

/** ----------------------------------------------------------------------------------
 * @brief This structure holds the memory config for each memory subtype in MCU CBASS
 * -----------------------------------------------------------------------------------
 */
const SDR_MemConfig_t SDR_ECC_MCUCBASSMemEntries[SDR_MCU_CBASS_WRAPPER_RAM_IDS_TOTAL_ENTRIES] =
{
    {SDR_ECC_MCU_CBASS_MEM_SUBTYPE_WR_RAMECC_ID, 0u,
         CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_WR_RAMECC_RAM_SIZE, 4u, ((bool)false)  },
    {SDR_ECC_MCU_CBASS_MEM_SUBTYPE_RD_RAMECC_ID, 0u,
        CSL_MCU_ECC_AGGR0_IMCU_COR_FW_VBUSP_32B_SOC_FW_SAFEG_RD_RAMECC_RAM_SIZE, 4u, ((bool)false)   },
};

/** ----------------------------------------------------------------------------------
 * @brief This structure holds the ECC interconnect Group Checker information for
 * SDR_ECC_R5F_MEM_SUBTYPE_VBUSM2AXI_EDC_VECTOR_ID RAM ID
 * -----------------------------------------------------------------------------------
 */
const SDR_GrpChkConfig_t   SDR_ECC_ramIdVbusM2AxiEdcVectorGrpEntries[SDR_PULSAR_CPU_RAM_ID_VBUSM2_AXI_EDC_VECTOR_GRP_MAX_ENTRIES] =
{
    {SDR_ECC_GROUP_CHECKER_TYPE_REDUNDANT, 1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   12u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    4u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   12u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   23u, 2u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   10u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    3u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    3u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    4u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_REDUNDANT, 1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_EDC,      32u, 7u},
    {SDR_ECC_GROUP_CHECKER_TYPE_EDC,      32u, 7u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    8u, 2u},
    {SDR_ECC_GROUP_CHECKER_TYPE_REDUNDANT, 1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_REDUNDANT, 1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   10u, 2u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    3u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    3u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    4u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    4u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,   10u, 2u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    7u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    2u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
    {SDR_ECC_GROUP_CHECKER_TYPE_PARITY,    1u, 1u},
};

// TODO - NEED TO ADD MSMC INTERCONNECT GROUP CHECKER FOR MSMC RAM ID


#endif /* INCLUDE_SDR_ECC_SOC_H_ */
