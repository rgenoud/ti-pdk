/*
 *  Copyright (C) 2017-2020 Texas Instruments Incorporated
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
/**
 * \ingroup TISCI
 * \defgroup tisci_keywriter tisci_keywriter
 *
 * DMSC controls the power management, security and resource management
 * of the device.
 *
 *
 * @{
 */
/**
 *
 *  \brief  This file contains:
 *
 *          WARNING!!: Autogenerated file from SYSFW. DO NOT MODIFY!!
 * Copyright (C) 2019-2020 Texas Instruments Incorporated - http://www.ti.com/
 */
#ifndef KEYWRITER_H
#define KEYWRTIER_H

/**
 *
 *  \brief Declarations for all functions dealing with keywriter
 */


/**
 * \brief Request message for keywriter
 *
 * \param hdr                           standard TISCI header
 * \param image_addr_lo        Lower 32 bit address (in LE format) of the certificate
 * \param image_addr_hi        Higher 32 bit address (in LE format) of the certificate
 * \param key_prog_mask        Reserved for future use
 */
struct tisci_msg_keywriter_req {
    struct tisci_header    hdr;
    uint32_t            image_addr_lo;
    uint32_t            image_addr_hi;
    uint32_t            key_prog_mask[2];
} __attribute__((__packed__));

/**
 * \brief Response message for keywriter
 *
 * \param hdr        standard TISCI header
 * \param debug_response  debug code for success/failure
 */
struct tisci_msg_keywriter_resp {
    struct tisci_header    hdr;
    uint32_t            debug_response;
} __attribute__((__packed__));

/**
 * \brief Bit positions for debug response
 * */
enum keywriter_error_codes {
    KEYWR_ERR_DECRYPT_AES256_KEY = 0,
    KEYWR_ERR_DECRYPT_BMEK,
    KEYWR_ERR_DECRYPT_BMPKH,
    KEYWR_ERR_DECRYPT_SMEK,
    KEYWR_ERR_DECRYPT_SMPKH,
    KEYWR_ERR_INTERAL_OP,
    KEYWR_ERR_INVALID_EXT_COUNT,
    KEYWR_ERR_PARSE_CERT,
    KEYWR_ERR_PARSE_FEK,
    KEYWR_ERR_PARSE_SMPK_CERT,
    KEYWR_ERR_PROGR_BMEK,
    KEYWR_ERR_PROGR_BMPKH_PART_1,
    KEYWR_ERR_PROGR_BMPKH_PART_2,
    KEYWR_ERR_PROGR_KEYCOUNT,
    KEYWR_ERR_PROGR_KEYREV,
    KEYWR_ERR_PROGR_SMEK,
    KEYWR_ERR_PROGR_SMPKH_PART_1,
    KEYWR_ERR_PROGR_SMPKH_PART_2,
    KEYWR_ERR_VALIDATION_CERT,
    KEYWR_ERR_VALIDATION_SMPK_CERT,
    KEYWR_ERR_VALIDATION_BMPK_KEY,
    KEYWR_ERR_VALIDATION_SMPK_KEY,
    KEYWR_ERR_WRITE_PROT_KEYCOUNT,
    KEYWR_ERR_WRITE_PROT_KEYREV,
};


#endif

/* @} */
